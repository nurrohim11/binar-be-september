{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Crud JWT - OpenAPI 3.0",
    "contact": {
      "email": "nrohim@binaracademy.org"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "servers": [
    {
      "url": "http://localhost:7200"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Everything about your Article"
    }
  ],
  "paths": {
    "/auth/login":{
      "post":{
        "tags": [
          "Auth"
        ],
        "summary": "Login",
        "description": "Login",
        "operationId": "Login",
        "requestBody": {
          "description": "Login your account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type":"object",
                  "properties":{
                    "status":{
                      "type": "integer",
                      "format": "int64",
                      "example": 200
                    },
                    "message":{
                      "type": "string",
                      "example": "Successful"
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/register":{
      "post":{
        "tags": [
          "Auth"
        ],
        "summary": "Register",
        "description": "Register",
        "operationId": "Register",
        "requestBody": {
          "description": "Login your account",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Login"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type":"object",
                  "properties":{
                    "status":{
                      "type": "integer",
                      "format": "int64",
                      "example": 200
                    },
                    "message":{
                      "type": "string",
                      "example": "Successful"
                    }
                  }
                }
              }
            }
          },
          "400":{
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find All Product",
        "description": "Find all Product with approved value is true",
        "operationId": "findAllProduct",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Status values that need to be considered for filter",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "authtoken": []
          }
        ]
      },
      "post":{
        "tags": [
          "Product"
        ],
        "summary": "Create a new Product",
        "operationId": "createNewProduct",
        "requestBody": {
          "description": "Request body for create product",
          "content": {
            "application/json": {
              "schema": {
                "type":"object",
                "properties":{
                  "name":{
                    "type": "string",
                    "example": "product 1"
                  },
                  "qty":{
                    "type": "integer",
                    "example": 10
                  },
                  "price":{
                    "type": "integer",
                    "example": 30
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "authtoken": []
          }
        ]
      }
    },
    "/product/{productId}":{
      "put":{
        "tags": [
          "Product"
        ],
        "summary": "Update product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Request body for update product",
          "content": {
            "application/json": {
              "schema": {
                "type":"object",
                "properties":{
                  "name":{
                    "type": "string",
                    "example": "product 1"
                  },
                  "qty":{
                    "type": "integer",
                    "example": 10
                  },
                  "price":{
                    "type": "integer",
                    "example": 30
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "authtoken": []
          }
        ]
      },
      "delete":{
        "tags": [
          "Product"
        ],
        "summary": "Update product",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of product to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "authtoken": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Login": {
        "type":"object",
        "properties":{
          "email":{
            "type": "string",
            "example": "nrohim893@gmail.com"
          },
          "password":{
            "type": "string",
            "example": "123"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "example":200
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "securitySchemes": {
      "authtoken": {
        "type": "apiKey",
        "name": "authorization",
        "in": "header"
      }
    }
  }
}